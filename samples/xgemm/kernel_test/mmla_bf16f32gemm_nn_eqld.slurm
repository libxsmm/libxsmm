#!/usr/bin/env bash

if [[ ${LIBXSMM_TARGET} == "knm" ]]; then
  exit 0;
fi
if [[ ${LIBXSMM_TARGET} == "snb" ]]; then
  exit 0;
fi
if [[ ${LIBXSMM_TARGET} == "wsm" ]]; then
  exit 0;
fi

TESTFILE1=$(mktemp)
TESTFILE2=$(mktemp)

if [ -x "$(command -v python3)" ]; then
  PYTHON=$(command -v python3)
else
  PYTHON=$(command -v python)
fi

${PYTHON} << END
import random as rnd
import time as time
rnd.seed(time.time())
randnum = rnd.sample(range(2,101,2), 18)
randnumk = rnd.sample(range(4,101,4), 18)
f1 = open("${TESTFILE1}", "w+")
f2 = open("${TESTFILE2}", "w+")
i = 0
for m in randnum:
    for n in randnum:
        for k in randnumk:
            line = str(m) + ' ' + str(n) + ' ' + str(k) + ' ' \
                 + str(m) + ' ' + str(k) + ' ' + str(m) + '\n'
            if 0 == (i % 2):
                f1.write(line)
            else:
                f2.write(line)
            i = i + 1
f1.close()
f2.close()
END

./kernel ${TESTFILE1} 1 1 0 0 0 0 BF16F32 nobr 1 0 1 1
./kernel ${TESTFILE2} 1 1 0 0 0 0 BF16F32 nobr 1 0 1 1

./kernel ${TESTFILE1} 1 1 0 0 0 0 BF16F32 addrbr 5 0 1 1

./kernel ${TESTFILE1} 1 1 0 0 0 0 BF16F32 offsbr 5 0 1 1

./kernel ${TESTFILE1} 1 1 0 0 0 0 BF16F32 strdbr 5 0 1 1

./kernel ${TESTFILE2} 1 1 0 0 0 0 BF16F32 addrbr 5 1 1 1

./kernel ${TESTFILE2} 1 1 0 0 0 0 BF16F32 offsbr 5 1 1 1

./kernel ${TESTFILE2} 1 1 0 0 0 0 BF16F32 strdbr 5 1 1 1

rm ${TESTFILE1}
rm ${TESTFILE2}
