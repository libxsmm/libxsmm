###############################################################################
# Copyright (c) Intel Corporation - All rights reserved.                      #
# This file is part of the LIBXSMM library.                                   #
#                                                                             #
# For information on the license, see the LICENSE file.                       #
# Further information: https://github.com/libxsmm/libxsmm/                    #
# SPDX-License-Identifier: BSD-3-Clause                                       #
###############################################################################
# Sasikanth Avancha, Dhiraj Kalamkar, Alexander Heinecke (Intel Corp.)
###############################################################################

name: "GoogleNet"
node {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  propagate_down: false
  mode: TRAIN
  data_param {
    train_source: "/scratch/aheineck/imagenet/256x256/"
    test_source: "/scratch/aheineck/imagenet/256x256/"
    batch_size: 128
    num_train_files: 1281167
    num_test_files: 50000
    train_data_info: "/nfs_home/savancha/xsmm_gxm/datainfo/train_rgb_info"
    test_data_info: "/nfs_home/savancha/xsmm_gxm/datainfo/test_rgb_info"
    lookahead: 2

  # mean pixel / channel-wise mean instead of mean image
    image_xform_param {
      orig_size: 256
      crop_image: true
      crop_size: 224
      mean_values: 118.380948
      #mean_values: 104
      #mean_values: 117
      #mean_values: 123
      scale_values: 0.01615589
      mirror: true
    }  
  }
}
node {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s2"
  propagate_down: false
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "conv1/relu_7x7"
  type: "ReLU"
  bottom: "conv1/7x7_s2"
  top: "conv1/relu_7x7"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/relu_7x7"
  top: "pool1/3x3_s2"
  pooling_param {
    engine: XSMM
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
node {
  name: "conv2/3x3_reduce"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "conv2/relu_3x3_reduce"
  type: "ReLU"
  bottom: "conv2/3x3_reduce"
  top: "conv2/relu_3x3_reduce"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "conv2/3x3"
  type: "Convolution"
  bottom: "conv2/relu_3x3_reduce"
  top: "conv2/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "conv2/relu_3x3"
  type: "ReLU"
  bottom: "conv2/3x3"
  top: "conv2/relu_3x3"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/relu_3x3"
  top: "pool2/3x3_s2"
  pooling_param {
    engine: XSMM
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
node {
  name: "inception_3a/1x1"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3a/relu_1x1"
  type: "ReLU"
  bottom: "inception_3a/1x1"
  top: "inception_3a/relu_1x1"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/relu_3x3_reduce"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3a/3x3"
  type: "Convolution"
  bottom: "inception_3a/relu_3x3_reduce"
  top: "inception_3a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3a/relu_3x3"
  type: "ReLU"
  bottom: "inception_3a/3x3"
  top: "inception_3a/relu_3x3"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3a/5x5_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/relu_5x5_reduce"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3a/5x5"
  type: "Convolution"
  bottom: "inception_3a/relu_5x5_reduce"
  top: "inception_3a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3a/relu_5x5"
  type: "ReLU"
  bottom: "inception_3a/5x5"
  top: "inception_3a/relu_5x5"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3a/pool"
  type: "Pooling"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool"
  pooling_param {
    engine: XSMM
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
node {
  name: "inception_3a/pool_proj"
  type: "Convolution"
  bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/relu_pool_proj"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3a/output"
  type: "Concat"
  bottom: "inception_3a/relu_1x1"
  bottom: "inception_3a/relu_3x3"
  bottom: "inception_3a/relu_5x5"
  bottom: "inception_3a/relu_pool_proj"
  top: "inception_3a/output"
  concat_param {
    engine: XSMM
  }
}
node {
  name: "inception_3b/1x1"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3b/relu_1x1"
  type: "ReLU"
  bottom: "inception_3b/1x1"
  top: "inception_3b/relu_1x1"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/relu_3x3_reduce"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3b/3x3"
  type: "Convolution"
  bottom: "inception_3b/relu_3x3_reduce"
  top: "inception_3b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3b/relu_3x3"
  type: "ReLU"
  bottom: "inception_3b/3x3"
  top: "inception_3b/relu_3x3"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/relu_5x5_reduce"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3b/5x5"
  type: "Convolution"
  bottom: "inception_3b/relu_5x5_reduce"
  top: "inception_3b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 96
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3b/relu_5x5"
  type: "ReLU"
  bottom: "inception_3b/5x5"
  top: "inception_3b/relu_5x5"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3b/pool"
  type: "Pooling"
  bottom: "inception_3a/output"
  top: "inception_3b/pool"
  pooling_param {
    engine: XSMM
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
node {
  name: "inception_3b/pool_proj"
  type: "Convolution"
  bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_3b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/relu_pool_proj"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_3b/output"
  type: "Concat"
  bottom: "inception_3b/relu_1x1"
  bottom: "inception_3b/relu_3x3"
  bottom: "inception_3b/relu_5x5"
  bottom: "inception_3b/relu_pool_proj"
  top: "inception_3b/output"
  concat_param {
    engine: XSMM
  }
}
node {
  name: "pool3/3x3_s2"
  type: "Pooling"
  bottom: "inception_3b/output"
  top: "pool3/3x3_s2"
  pooling_param {
    engine: XSMM
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
node {
  name: "inception_4a/1x1"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_4a/relu_1x1"
  type: "ReLU"
  bottom: "inception_4a/1x1"
  top: "inception_4a/relu_1x1"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_4a/3x3_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_4a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/relu_3x3_reduce"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_4a/3x3"
  type: "Convolution"
  bottom: "inception_4a/relu_3x3_reduce"
  top: "inception_4a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 208
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_4a/relu_3x3"
  type: "ReLU"
  bottom: "inception_4a/3x3"
  top: "inception_4a/relu_3x3"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_4a/5x5_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_4a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/relu_5x5_reduce"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_4a/5x5"
  type: "Convolution"
  bottom: "inception_4a/relu_5x5_reduce"
  top: "inception_4a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 48
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_4a/relu_5x5"
  type: "ReLU"
  bottom: "inception_4a/5x5"
  top: "inception_4a/relu_5x5"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_4a/pool"
  type: "Pooling"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/pool"
  pooling_param {
    engine: XSMM
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
node {
  name: "inception_4a/pool_proj"
  type: "Convolution"
  bottom: "inception_4a/pool"
  top: "inception_4a/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "inception_4a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/relu_pool_proj"
  relu_param {
    engine: XSMM
  }
}
node {
  name: "inception_4a/output"
  type: "Concat"
  bottom: "inception_4a/relu_1x1"
  bottom: "inception_4a/relu_3x3"
  bottom: "inception_4a/relu_5x5"
  bottom: "inception_4a/relu_pool_proj"
  top: "inception_4a/output"
  concat_param {
    engine: XSMM
  }
}
node {
  name: "loss1/ave_pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "loss1/ave_pool"
  pooling_param {
    engine: XSMM
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
node {
  name: "loss1/conv"
  type: "Convolution"
  bottom: "loss1/ave_pool"
  top: "loss1/conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    engine: XSMM
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "loss1/relu_conv"
  type: "ReLU"
  bottom: "loss1/conv"
  top: "loss1/relu_conv"
  relu_param {
    engine: LOOP
  }
}
node {
  name: "loss1/fc"
  type: "FullyConnected"
  bottom: "loss1/relu_conv"
  top: "loss1/fc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  fc_param {
    engine: XSMM
    num_output: 1024
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "loss1/relu_fc"
  type: "ReLU"
  bottom: "loss1/fc"
  top: "loss1/relu_fc"
  relu_param {
    engine: LOOP
  }
}
node {
  name: "loss1/drop_fc"
  type: "Dropout"
  bottom: "loss1/relu_fc"
  top: "loss1/drop_fc"
  dropout_param {
    dropout_ratio: 0.7
    engine: LOOP
  }
}
node {
  name: "loss1/classifier"
  type: "FullyConnected"
  bottom: "loss1/drop_fc"
  top: "loss1/classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  fc_param {
    engine: XSMM
    num_output: 1000
    weight_filler {
      type: "XAVIER"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
node {
  name: "loss1/loss"
  type: "SoftmaxWithLoss"
  bottom: "loss1/classifier"
  bottom: "label"
  top: "loss1/loss1"
  loss_weight: 1
}
node {
  name: "loss1/top-1"
  type: "Accuracy"
  bottom: "loss1/classifier"
  bottom: "label"
  top: "loss1/top-1"
  propagate_down: false
  accuracy_param {
    top_k: 1
  }
}
node {
  name: "loss1/top-5"
  type: "Accuracy"
  bottom: "loss1/classifier"
  bottom: "label"
  top: "loss1/top-5"
  propagate_down: false
  accuracy_param {
    top_k: 5
  }
}
